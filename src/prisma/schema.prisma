// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  balance     Float        @default(0)
  budgets     Budget[]
  goals       Goal[]
  transactions Transaction[]
}


model Transaction {
  id          Int          @id @default(autoincrement())
  amount      Float
  category    String   @default("Varios")
  type        TransactionType
  userId      Int
  createdAt   DateTime  @default(now())
  date DateTime
  description String?

  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Budget {
  id          Int          @id @default(autoincrement())
  amount      Float
  category    String
  userId      Int
  createdAt   DateTime      @default(now())

  user        User          @relation(fields: [userId], references: [id])
}

model Goal {
  id          Int          @id @default(autoincrement())
  target      Float
  achieved    Float         @default(0.0)
  description String
  userId      Int
  createdAt   DateTime      @default(now())

  user        User          @relation(fields: [userId], references: [id])
}

enum TransactionType {
  INCOME
  EXPENSE
}